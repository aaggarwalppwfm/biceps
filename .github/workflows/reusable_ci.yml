name: Reusable CI Workflow

on:
  workflow_call:
    inputs:
      project_type:
        required: true
        type: string
      solution_path:
        required: true
        type: string
      artifact_name:
        required: true
        type: string
    secrets:
      repo_token:
        required: true

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.repo_token }}

      - name: Setup MSBuild
        if: inputs.project_type == 'framework'
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup .NET SDK
        if: inputs.project_type == 'core'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.x'

      - name: Restore Packages
        run: |
          if [ "${{ inputs.project_type }}" == "framework" ]; then
            nuget restore ${{ inputs.solution_path }}
          else
            dotnet restore
          fi

      - name: Build Project
        run: |
          if [ "${{ inputs.project_type }}" == "framework" ]; then
            msbuild ${{ inputs.solution_path }} /p:Configuration=Release /p:OutDir="${{ github.workspace }}\\artifacts\\"
          else
            dotnet build --configuration Release --output artifacts
          fi

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: artifacts

      - name: Git Tag Build
        env:
          GH_TOKEN: ${{ secrets.repo_token }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch --all
          TAG_NAME="build-v${{ github.run_number }}"
          git tag $TAG_NAME
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push origin $TAG_NAME
